// ROS message includes
#include "ros/ros.h"
#include <std_msgs/String.h>

/* protected region user include files on begin */
/* C includes */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <time.h>

/* C++ includes */
#include <iostream>
#include <string>
#include <list>

/* protected region user include files end */

class common_timeline_dash_config
{
public:
    std::string file_path;
};

class common_timeline_dash_data
{
// autogenerated: don't touch this class
public:
    //input data
    std_msgs::String in_input;
    //output data
};

class common_timeline_dash_impl
{
    /* protected region user member variables on begin */
	common_timeline_dash_config localconfig;
    /* protected region user member variables end */

public:
    common_timeline_dash_impl() 
    {
        /* protected region user constructor on begin */
        /* protected region user constructor end */
    }

    void configure(common_timeline_dash_config config) 
    {
        /* protected region user configure on begin */
    	localconfig = config;
        /* protected region user configure end */
    }

    void update(common_timeline_dash_data &data, common_timeline_dash_config config)
    {
        /* protected region user update on begin */
        /* protected region user update end */
    }

    void topicCallback_input(const std_msgs::String::ConstPtr& msg)
    {
        /* protected region user implementation of subscribe callback for input on begin */
    	char my_buff[256];

		std::string str = msg->data;
		std::string buf; // Have a buffer string
		std::stringstream ss(str); // Insert the string into a stream

		std::vector<std::string> tokens; // Create vector to hold our words
		std::string date_str;
		std::string color_str;
		std::string name_str;

		if(ss >> buf)
			date_str = buf + " ";
		if(ss >> buf)
			date_str = date_str + buf + ", ";
		if(ss >> buf)
			date_str = date_str + buf;
		if(ss >> buf)
			color_str = buf;

		while (ss >> buf)
			name_str = name_str + buf + " ";

		sprintf(my_buff, "echo \"  - name: \\\"%s\\\"\n    date: \\\"%s\\\"\n    background: \\\"%s\\\"\" >> %s", name_str.c_str(), date_str.c_str(), color_str.c_str(), localconfig.file_path.c_str());
		std::cout << my_buff << std::endl;
		system(my_buff);

        /* protected region user implementation of subscribe callback for input end */
    }



    /* protected region user additional functions on begin */
    /* protected region user additional functions end */
};
