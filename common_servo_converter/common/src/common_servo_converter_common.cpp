// ROS message includes
#include "ros/ros.h"
#include <std_msgs/UInt16.h>
#include <std_msgs/UInt16.h>

/* protected region user include files on begin */
/* protected region user include files end */

class common_servo_converter_config
{
public:
    int inverted;
    int offset;
};

class common_servo_converter_data
{
// autogenerated: don't touch this class
public:
    //input data
    std_msgs::UInt16 in_input;
    //output data
    std_msgs::UInt16 out_output;
    bool out_output_active;
};

class common_servo_converter_impl
{
    /* protected region user member variables on begin */
	common_servo_converter_config localconfig;

	int output;
	bool output_ready;
    /* protected region user member variables end */

public:
    common_servo_converter_impl() 
    {
        /* protected region user constructor on begin */
    	output = 0;
    	output_ready = false;
    	/* protected region user constructor end */
    }

    void configure(common_servo_converter_config config) 
    {
        /* protected region user configure on begin */
    	localconfig = config;
        /* protected region user configure end */
    }

    void update(common_servo_converter_data &data, common_servo_converter_config config)
    {
        /* protected region user update on begin */
    	data.out_output_active = output_ready;
    	if(output_ready)
    	{
    		data.out_output.data = output;
    		output_ready = false;
    	}
        /* protected region user update end */
    }

    void topicCallback_input(const std_msgs::UInt16::ConstPtr& msg)
    {
        /* protected region user implementation of subscribe callback for input on begin */
        output = msg->data;
        if(localconfig.inverted) {
        	output = 180 - output;
    	}
    	output = output + localconfig.offset;
    	output_ready = true;

        /* protected region user implementation of subscribe callback for input end */
    }



    /* protected region user additional functions on begin */
    /* protected region user additional functions end */
};
